<%@ jet
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		java.util.List
    	java.util.Map
    	java.util.Iterator
		"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	List<IConnection> inputConnections = (List<IConnection>)node.getIncomingConnections();
	List<IConnection> outputConnections = (List<IConnection>)node.getOutgoingConnections();
	if((inputConnections==null) || (inputConnections.size()==0) || (outputConnections == null) || (outputConnections.size()==0)) {
		return "";
	}
	
	String previous_node="";
	String start_node="";
	
	boolean inMain = true;

	String previousOutputConnectionName = null;
	
	IConnection mainConnnection = inputConnections.get(0);
	previous_node = mainConnnection.getSource().getUniqueName();
	INode loadNode = node.getDesignSubjobStartNode();
	start_node = loadNode.getUniqueName();
	inMain = loadNode.isSubtreeStart();
	previousOutputConnectionName = mainConnnection.getName();
	
	String outputConnectionName = outputConnections.get(0).getName();
	
	List<Map<String, String>> groupByTable = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__GROUP_BY__");
	List<Map<String, String>> outputMapping = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__OUTPUT_MAPPING__");
	
	if((outputMapping == null) || (outputMapping.size() == 0)) {
		return "";
	}
%>

	<%@ include file="@{org.talend.designer.components.bigdata}/components/templates/Pig/PigHeader.javajet"%>	
	routines.system.PigHelper helper_<%=cid%> = new routines.system.PigHelper();
	
<%
	for(int i=0;i<inputConnections.size();i++) {
		InputTable inputConnection = inputConnections.get(i);
		String inputConnectionName = inputConnection.getName();
		boolean isMainInput = (i == 0);
		if(isMainInput) {
%>
		StringBuilder sb_<%=cid%> = new StringBuilder();
		//the bag name of main input bag
		helper_<%=cid%>.add("query","<%=cid%>_<%=inputConnectionName%>_RESULT = FOREACH <%=previous_node%>_<%=inputConnectionName%>_RESULT GENERATE *;");
<%
		} else {
%>
		//get the scripts in the lookup process
		java.util.List<String[]> ps_<%=inputConnectionName%> = (java.util.List<String[]>)globalMap.get("<%=inputConnectionName%>");
		
		for(int i_<%=inputConnectionName%>=0; i_<%=inputConnectionName%><ps_<%=inputConnectionName%>.size(); i_<%=inputConnectionName%>++) {
			String[] o_<%=inputConnectionName%> = ps_<%=inputConnectionName%>.get(i_<%=inputConnectionName%>);
			helper_<%=cid%>.add(o_<%=inputConnectionName%>[0],o_<%=inputConnectionName%>[1]);
			
			if(i_<%=inputConnectionName%> == (ps_<%=inputConnectionName%>.size() - 1)) {//get the bag name of current lookup bag
				String bagName_<%=inputConnectionName%> = o_<%=inputConnectionName%>[1];
				bagName_<%=inputConnectionName%> = bagName_<%=inputConnectionName%>.substring(0,bagName_<%=inputConnectionName%>.indexOf("_RESULT")+7);
				helper_<%=cid%>.add("query","<%=cid%>_<%=inputConnectionName%>_RESULT = FOREACH " + bagName_<%=inputConnectionName%> + " GENERATE *;");
			}
		}
<%
		}
	}
	
%>
	sb_<%=cid%>.append("<%=cid%>_<%=outputConnectionName%>_RESULT = COGROUP ");
<%
	for() {
		if((groupByTable==null) || (groupByTable.size()==0)) {//COGROUP ALL
			
		} else {
		
		}
	}
%>
	
	helper_<%=cid%>.add("query",sb_<%=cid%>.toString());
	
	<%@ include file="@{org.talend.designer.components.bigdata}/components/templates/Pig/RegisterPigLatin.javajet"%>
<%
	log4jFileUtil.componentFinishInfo(node);
%>